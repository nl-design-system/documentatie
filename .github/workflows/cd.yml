name: Continuous Delivery

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  continuous-integration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4.1.1

      - name: Install pnpm package manager
        uses: pnpm/action-setup@v3.0.0
        with:
          version: 8.14

      - name: Set up Node.js version
        uses: actions/setup-node@v4.0.2
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: |
          pnpm install

      - name: "Continuous Integration: lint"
        run: |
          pnpm run --if-present lint

      - name: "Continuous Integration: build"
        run: |
          pnpm run --if-present build

      - name: "Continuous Integration: test"
        run: |
          pnpm run --if-present test

      - name: "Retain build artifact: website"
        uses: actions/upload-artifact@v4.3.1
        with:
          name: website
          path: build/
          retention-days: 1

  e2e-test:
    runs-on: ubuntu-latest
    needs: [continuous-integration]

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4.1.1

      - name: Install pnpm package manager
        uses: pnpm/action-setup@v3.0.0
        with:
          version: 8.14

      - name: Set up Node.js version
        uses: actions/setup-node@v4.0.2
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: |
          pnpm install

      - name: "Install headless browsers for end-to-end testing"
        run: |
          pnpm run --if-present install-test-browsers

      - name: "Restore build artifact: website"
        uses: actions/download-artifact@v4.1.4
        with:
          name: website
          path: build/

      - name: "Continuous Integration: end-to-end tests"
        run: |
          pnpm run --if-present test-e2e

      - name: "Continuous Integration: make screenshots"
        if: ${{ github.ref_name == 'main' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'visual regression test')) }}
        run: |
          pnpm run --if-present test-visual

      - name: "Continuous Integration: publish screenshots to Argos"
        if: ${{ github.ref_name == 'main' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'visual regression test')) }}
        env:
          ARGOS_TOKEN: ${{ secrets.ARGOS_TOKEN }}
        run: |
          pnpm run --if-present publish:argos

      - name: "Retain build artifact: test report"
        uses: actions/upload-artifact@v4.3.1
        with:
          name: playwright-report
          path: tmp/playwright-html-report/
          retention-days: 7

      - name: "Retain build artifact: screenshots"
        if: ${{ github.ref_name == 'main' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'visual regression test')) }}
        uses: actions/upload-artifact@v4.3.1
        with:
          name: screenshots
          path: tmp/screenshots/
          retention-days: 7

  publish-website:
    runs-on: ubuntu-latest
    needs: continuous-integration
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout release branch
        uses: actions/checkout@v4.1.1

      - name: "Restore build artifact: website"
        uses: actions/download-artifact@v4.1.4
        with:
          name: website
          path: build/

      - name: Continuous Deployment to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          branch: gh-pages
          folder: build/

  publish-npm:
    runs-on: ubuntu-latest
    needs: [continuous-integration]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout release branch
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Install pnpm
        uses: pnpm/action-setup@v3.0.0
        with:
          version: 8.14

      - name: Set up Node.js version
        uses: actions/setup-node@v4.0.2
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: |
          pnpm install

      - name: "Continuous Deployment: publish to GitHub repository"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
          GIT_AUTHOR_NAME: "NL Design System"
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          GIT_COMMITTER_NAME: "NL Design System"
        run: |
          git push --set-upstream origin HEAD
          pnpm run release

      - name: "Continuous Deployment: publish to npm"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          pnpm config set "//registry.npmjs.org/:_authToken" "${NPM_TOKEN}"
          pnpm run publish
          pnpm config delete "//registry.npmjs.org/:_authToken"
