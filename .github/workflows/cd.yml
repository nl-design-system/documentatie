name: Continuous Delivery

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  continuous-integration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6

      - name: Configure Pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5.0.0

      - name: Install pnpm package manager
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0

      - name: Set up Node.js version
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: "Continuous Integration: lint"
        run: pnpm run --if-present lint

      - name: "Continuous Integration: build"
        run: pnpm run --if-present build

      - name: "Continuous Integration: test"
        run: pnpm run --if-present test

      - name: "Retain build artifact: website"
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: website
          path: build/
          retention-days: 1

      - name: "Retain build artifact for GitHub Pages: website"
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
        with:
          path: build/

  e2e-test:
    runs-on: ubuntu-latest
    needs: [continuous-integration]

    steps:
      - name: Checkout branch
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6

      - name: Install pnpm package manager
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0

      - name: Set up Node.js version
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: "Install headless browsers for end-to-end testing"
        run: pnpm run --if-present install-test-browsers

      - name: "Restore build artifact: website"
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          name: website
          path: build/

      - name: "Continuous Integration: end-to-end tests"
        run: pnpm run --if-present test-e2e

      - name: "Continuous Integration: make screenshots"
        if: ${{ github.ref_name == 'main' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'visual regression test')) }}
        run: pnpm run --if-present test-visual

      - name: "Continuous Integration: publish screenshots to Argos"
        if: ${{ github.ref_name == 'main' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'visual regression test')) }}
        env:
          ARGOS_TOKEN: ${{ secrets.ARGOS_TOKEN }}
        run: pnpm run --if-present publish:argos

      - name: "Retain build artifact: test report"
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: playwright-report
          path: tmp/playwright-html-report/
          retention-days: 7

      - name: "Retain build artifact: screenshots"
        if: ${{ github.ref_name == 'main' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'visual regression test')) }}
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: screenshots
          path: tmp/screenshots/
          retention-days: 7

  publish-website:
    runs-on: ubuntu-latest
    needs: continuous-integration
    if: github.ref == 'refs/heads/main'

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deploy-pages.outputs.page_url }}

    steps:
      - name: Deploy
        id: deploy-pages
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5

  publish-npm:
    runs-on: ubuntu-latest
    needs: [continuous-integration]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout release branch
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Install pnpm
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0

      - name: Set up Node.js version
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: "Continuous Deployment: publish to GitHub repository"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
          GIT_AUTHOR_NAME: "NL Design System"
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          GIT_COMMITTER_NAME: "NL Design System"
        run: |
          git push --set-upstream origin HEAD
          pnpm run release

      - name: "Continuous Deployment: publish to npm"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          pnpm config set "//registry.npmjs.org/:_authToken" "${NPM_TOKEN}"
          pnpm run publish
          pnpm config delete "//registry.npmjs.org/:_authToken"
