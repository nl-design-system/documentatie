'use strict';
(self.webpackChunk_nl_design_system_website = self.webpackChunk_nl_design_system_website || []).push([
 [39528],
 {
  83010: (e, n, i) => {
   i.r(n), i.d(n, { assets: () => r, contentTitle: () => d, default: () => h, frontMatter: () => s, metadata: () => o, toc: () => a });
   var l = i(52676),
    t = i(40139);
   const s = { title: 'Figma hygi\xebne \xb7 Designer \xb7 Handboek', hide_title: !0, hide_table_of_contents: !0, sidebar_label: 'Figma hygi\xebne', sidebar_position: 4, pagination_label: 'Figma hygi\xebne', description: 'Informatie voor designers over Figma hygi\xebne.', slug: '/handboek/designer/figma-hygiene', keywords: ['componenten', 'design system', 'figma', 'hygiene'] },
    d = 'Figma hygi\xebne',
    o = { id: 'handboek/designer/werken-met-nl-design-system/figma-hygiene', title: 'Figma hygi\xebne \xb7 Designer \xb7 Handboek', description: 'Informatie voor designers over Figma hygi\xebne.', source: '@site/docs/handboek/designer/werken-met-nl-design-system/figma-hygiene.mdx', sourceDirName: 'handboek/designer/werken-met-nl-design-system', slug: '/handboek/designer/figma-hygiene', permalink: '/handboek/designer/figma-hygiene', draft: !1, unlisted: !1, editUrl: 'https://github.com/nl-design-system/documentatie/tree/main/docs/handboek/designer/werken-met-nl-design-system/figma-hygiene.mdx', tags: [], version: 'current', sidebarPosition: 4, frontMatter: { title: 'Figma hygi\xebne \xb7 Designer \xb7 Handboek', hide_title: !0, hide_table_of_contents: !0, sidebar_label: 'Figma hygi\xebne', sidebar_position: 4, pagination_label: 'Figma hygi\xebne', description: 'Informatie voor designers over Figma hygi\xebne.', slug: '/handboek/designer/figma-hygiene', keywords: ['componenten', 'design system', 'figma', 'hygiene'] }, sidebar: 'handboek', previous: { title: 'Figma stappenplan', permalink: '/handboek/designer/figma-stappenplan' }, next: { title: 'Werken met de Figma changelog', permalink: '/handboek/designer/werken-met-figma-changelog' } },
    r = {},
    a = [
     { value: '1. Figma structuur', id: '1-figma-structuur', level: 2 },
     { value: '1.1 Teams', id: '11-teams', level: 3 },
     { value: '1.2 Projecten', id: '12-projecten', level: 3 },
     { value: '1.2.1 Bibliotheken', id: '121-bibliotheken', level: 4 },
     { value: 'NL Design System - Bibliotheek', id: 'nl-design-system---bibliotheek', level: 5 },
     { value: 'NL Design System - ToDo Bibliotheek', id: 'nl-design-system---todo-bibliotheek', level: 5 },
     { value: '1.2.2 Werkbestanden', id: '122-werkbestanden', level: 4 },
     { value: 'Schetsboek', id: 'schetsboek', level: 5 },
     { value: 'Voorbeeld bibliotheken', id: 'voorbeeld-bibliotheken', level: 5 },
     { value: 'Voorbeeld templates', id: 'voorbeeld-templates', level: 5 },
     { value: '1.2.3 Archief', id: '123-archief', level: 4 },
     { value: '2. Figma bestanden', id: '2-figma-bestanden', level: 2 },
     { value: '2.1 Bestandsnaam', id: '21-bestandsnaam', level: 3 },
     { value: '2.2 Cover', id: '22-cover', level: 3 },
     { value: '2.3 Read me', id: '23-read-me', level: 3 },
     { value: '2.4 Open Source', id: '24-open-source', level: 3 },
     { value: '3. Component bibliotheken', id: '3-component-bibliotheken', level: 2 },
     { value: '3.1 Bibliotheek indeling', id: '31-bibliotheek-indeling', level: 3 },
     { value: '3.2 Schrijfwijze', id: '32-schrijfwijze', level: 3 },
     { value: '3.2.1 Pages, Headings, Frames, Properties en Property values', id: '321-pages-headings-frames-properties-en-property-values', level: 4 },
     { value: '3.2.2 Layers', id: '322-layers', level: 4 },
     { value: '3.2.3 Componenten', id: '323-componenten', level: 4 },
     { value: '3.2.4 Sub-componenten', id: '324-sub-componenten', level: 4 },
     { value: '3.3 Sub-componenten', id: '33-sub-componenten', level: 3 },
     { value: '3.4 Properties', id: '34-properties', level: 3 },
     { value: '3.4.1 Volgorde van properties', id: '341-volgorde-van-properties', level: 4 },
     { value: '3.4.2 Volgorde van property values', id: '342-volgorde-van-property-values', level: 4 },
     { value: '3.4.3 Exposed properties', id: '343-exposed-properties', level: 4 },
     { value: '3.5 Icons', id: '35-icons', level: 3 },
     { value: '3.6 Structuur en positionering', id: '36-structuur-en-positionering', level: 3 },
     { value: '3.6.1 Volgorde van frames', id: '361-volgorde-van-frames', level: 4 },
     { value: '3.6.2 Positionering en witruimte', id: '362-positionering-en-witruimte', level: 4 },
     { value: '3.7 Estafette Badges', id: '37-estafette-badges', level: 3 },
     { value: '3.7.1 Speciale statussen: Help Wanted en Experimental', id: '371-speciale-statussen-help-wanted-en-experimental', level: 4 },
     { value: '4. Templates', id: '4-templates', level: 2 },
     { value: '4.1 Schrijfwijze', id: '41-schrijfwijze', level: 3 },
     { value: '4.1.1 Frames', id: '411-frames', level: 4 },
     { value: '4.2 Structuur en positionering', id: '42-structuur-en-positionering', level: 3 },
     { value: '4.2.1 Positionering en witruimte', id: '421-positionering-en-witruimte', level: 3 },
    ];
   function c(e) {
    const n = { a: 'a', code: 'code', h1: 'h1', h2: 'h2', h3: 'h3', h4: 'h4', h5: 'h5', li: 'li', ol: 'ol', p: 'p', strong: 'strong', ul: 'ul', ...(0, t.a)(), ...e.components };
    return (0, l.jsxs)(l.Fragment, { children: [(0, l.jsx)(n.h1, { id: 'figma-hygi\xebne', children: 'Figma hygi\xebne' }), '\n', (0, l.jsx)(n.p, { children: "Zo werken we in Figma: met duidelijke afspraken over opzet en structuur, oftewel de 'Figma hygi\xebne'." }), '\n', (0, l.jsx)(n.p, { children: 'Vooral rondom componenten is het fijn als we dezelfde hygi\xebne aanhouden. Zo kunnen componenten makkelijk gedeeld en hergebruikt worden tussen organisaties.' }), '\n', (0, l.jsx)(n.h2, { id: '1-figma-structuur', children: '1. Figma structuur' }), '\n', (0, l.jsxs)(n.p, { children: ["Met de NL Design System Figma omgeving zitten we momenteel op het '", (0, l.jsx)(n.a, { href: 'https://www.figma.com/nl-nl/pricing/', children: 'Organization plan' }), "'."] }), '\n', (0, l.jsx)(n.h3, { id: '11-teams', children: '1.1 Teams' }), '\n', (0, l.jsx)(n.p, { children: 'We hebben op dit moment 1 team: NL Design System.' }), '\n', (0, l.jsx)(n.h3, { id: '12-projecten', children: '1.2 Projecten' }), '\n', (0, l.jsx)(n.h4, { id: '121-bibliotheken', children: '1.2.1 Bibliotheken' }), '\n', (0, l.jsx)(n.p, { children: 'Hier plaatsen we onze Figma bestanden die als bibliotheek worden ingezet. Er zijn momenteel 2 Figma bibliotheken.' }), '\n', (0, l.jsx)(n.h5, { id: 'nl-design-system---bibliotheek', children: 'NL Design System - Bibliotheek' }), '\n', (0, l.jsx)(n.p, { children: "In deze bibliotheek vind je componenten met de status 'Community' en 'Candidate'. Samen werken we toe naar componenten met de status 'Hall of Fame'." }), '\n', (0, l.jsx)(n.p, { children: (0, l.jsx)(n.a, { href: 'https://www.figma.com/design/FqAr99wvrlHxTJYAHkFRQN/NL-Design-System---Bibliotheek?node-id=197-664&t=t25LHoMjEkUZyEi1-1', children: "Bekijk de 'NL Design System - Bibliotheek' in Figma" }) }), '\n', (0, l.jsx)(n.h5, { id: 'nl-design-system---todo-bibliotheek', children: 'NL Design System - ToDo Bibliotheek' }), '\n', (0, l.jsx)(n.p, { children: "In deze bibliotheek vind je componenten met de status 'Help Wanted' of 'Experimental'. Deze componenten zijn nog niet in code beschikbaar." }), '\n', (0, l.jsx)(n.p, { children: (0, l.jsx)(n.a, { href: 'https://www.figma.com/design/42KfIBw43pwLxv2tE7oRzg/NL-Design-System---ToDo-Bibliotheek?node-id=3047-14&t=fpA32yYLXZpVB6tb-1', children: "Bekijk de 'NL Design System - ToDo Bibliotheek' in Figma" }) }), '\n', (0, l.jsx)(n.h4, { id: '122-werkbestanden', children: '1.2.2 Werkbestanden' }), '\n', (0, l.jsx)(n.p, { children: 'Hier plaatsen we Figma bestanden waar we zelf mee werken. Bijvoorbeeld:' }), '\n', (0, l.jsx)(n.h5, { id: 'schetsboek', children: 'Schetsboek' }), '\n', (0, l.jsx)(n.p, { children: 'Een schetsbestand om snel idee\xebn uit te werken, te delen of vast te leggen.' }), '\n', (0, l.jsx)(n.p, { children: (0, l.jsx)(n.a, { href: 'https://www.figma.com/design/fy08SZpZmqx6ljLwvA3Woe/NL-Design-System---Schetsboek?node-id=231-73&t=f7kKKaXvqOj1q3Ey-1', children: "Bekijk het 'NL Design System - Schetsboek' in Figma" }) }), '\n', (0, l.jsx)(n.h5, { id: 'voorbeeld-bibliotheken', children: 'Voorbeeld bibliotheken' }), '\n', (0, l.jsxs)(n.p, { children: ['Duplicaten van onze Figma bibliotheken met het ', (0, l.jsx)(n.a, { href: '/handboek/huisstijl/themas/voorbeeld-thema/', children: 'Voorbeeld-thema' }), '. Hiermee laten we zien hoe organisaties de bibliotheken kunnen toepassen.'] }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.a, { href: 'https://www.figma.com/design/0J3EiRpZH3LJ0cx396XLNC/NL-Design-System---Bibliotheek---Voorbeeld?node-id=197-664&t=6q27i1PaV5ZFstxx-1', children: "Bekijk 'NL Design System - Bibliotheek - Voorbeeld'" }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.a, { href: 'https://www.figma.com/design/ig29egqH8dyyWY1oe03OC0/NL-Design-System---ToDo-Bibliotheek---Voorbeeld?node-id=0-1&t=0JUFZYgSsC4NLwHu-1', children: "Bekijk 'NL Design System - ToDo Bibliotheek - Voorbeeld'" }) }), '\n'] }), '\n', (0, l.jsx)(n.h5, { id: 'voorbeeld-templates', children: 'Voorbeeld templates' }), '\n', (0, l.jsx)(n.p, { children: 'Bestand met complete templates, opgebouwd uit componenten uit de 2 Figma bibliotheken met het Voorbeeld-thema.' }), '\n', (0, l.jsx)(n.p, { children: (0, l.jsx)(n.a, { href: 'https://www.figma.com/design/taAnsV55PVP0cmw18BnMDk/NL-Design-System---Templates---Voorbeeld?node-id=1-3&t=3lZPNWC5lsZzFZKO-1', children: "Bekijk het bestand 'NL Design System - Templates - Voorbeeld' in Figma" }) }), '\n', (0, l.jsx)(n.h4, { id: '123-archief', children: '1.2.3 Archief' }), '\n', (0, l.jsx)(n.p, { children: 'Hier plaatsen we Figma bestanden die niet langer nodig of relevant zijn.' }), '\n', (0, l.jsx)(n.h2, { id: '2-figma-bestanden', children: '2. Figma bestanden' }), '\n', (0, l.jsx)(n.p, { children: 'De volgende punten gelden voor alle Figma bestanden.' }), '\n', (0, l.jsx)(n.h3, { id: '21-bestandsnaam', children: '2.1 Bestandsnaam' }), '\n', (0, l.jsxs)(n.p, { children: ['Binnen NL Design System worden bibliotheken benoemd als ', (0, l.jsx)(n.code, { children: 'NL Design System - {type-bibliotheek} - {naam-organisatie}' }), '. Bijvoorbeeld: ', (0, l.jsx)(n.code, { children: 'NL Design System - Bibliotheek - Utrecht' }), ' of ', (0, l.jsx)(n.code, { children: 'NL Design System - ToDo Bibliotheek - Voorbeeld' }), '. Gebruik deze naamgevingsconventie om duidelijkheid te geven over de herkomst en status van componenten.'] }), '\n', (0, l.jsx)(n.h3, { id: '22-cover', children: '2.2 Cover' }), '\n', (0, l.jsx)(n.p, { children: 'Elk Figma bestand begint met een pagina \u2018Cover\u2019. Dit is de thumbnail die zichtbaar is in het Figma bestandenoverzicht. Je kunt de kleurstelling en titel aanpassen. Gebruik de functionaliteit \u2018Set as thumbnail\u2019 om deze cover te updaten.' }), '\n', (0, l.jsx)(n.h3, { id: '23-read-me', children: '2.3 Read me' }), '\n', (0, l.jsx)(n.p, { children: "Elk Figma bestand heeft als tweede pagina een 'Read me' frame waar wordt beschreven waar het bestand voor dient." }), '\n', (0, l.jsx)(n.h3, { id: '24-open-source', children: '2.4 Open Source' }), '\n', (0, l.jsx)(n.p, { children: "Standaard zijn Figma bestanden niet openbaar voor iedereen. Omdat we open source werken, is het belangrijk om bij het delen van linkjes met de community de juiste instellingen te kiezen. Ga bij 'Share' naar de optie 'Anyone can view' om het bestand voor iedereen zichtbaar te maken." }), '\n', (0, l.jsx)(n.h2, { id: '3-component-bibliotheken', children: '3. Component bibliotheken' }), '\n', (0, l.jsx)(n.p, { children: 'De volgende punten gelden specifiek voor de Figma bibliotheken.' }), '\n', (0, l.jsx)(n.h3, { id: '31-bibliotheek-indeling', children: '3.1 Bibliotheek indeling' }), '\n', (0, l.jsx)(n.p, { children: 'We hanteren 1 pagina per component, gerangschikt in alfabetische volgorde. Dit biedt de volgende voordelen:' }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsx)(n.li, { children: 'Relevante context per pagina. Door op elke pagina specifieke documentatie en context over de component toe te voegen, krijgen designers en developers direct inzicht in het gebruik en de richtlijnen, zonder afleiding van andere elementen.' }), '\n', (0, l.jsx)(n.li, { children: 'Snellere en eenvoudigere navigatie. Het terugvinden van specifieke componenten wordt een stuk makkelijker doordat elke component een eigen, goed vindbare pagina heeft.' }), '\n', (0, l.jsx)(n.li, { children: 'Betere versiebeheer en overzicht van wijzigingen. Alle opmerkingen en wijzigingen over een component blijven op 1 plek. Dit zorgt voor duidelijkheid en voorkomt verwarring bij het doorvoeren van updates.' }), '\n', (0, l.jsx)(n.li, { children: 'Kortere laadtijden. Door componenten te verdelen over meerdere pagina\u2019s, verbetert de laadtijd per pagina. Dit voorkomt dat Figma traag wordt, met name bij grotere bibliotheken.' }), '\n'] }), '\n', (0, l.jsx)(n.h3, { id: '32-schrijfwijze', children: '3.2 Schrijfwijze' }), '\n', (0, l.jsx)(n.h4, { id: '321-pages-headings-frames-properties-en-property-values', children: '3.2.1 Pages, Headings, Frames, Properties en Property values' }), '\n', (0, l.jsx)(n.p, { children: 'Pages, Headings, Frames, Properties \xe9n Property values schrijven we met een hoofdletter aan het begin van elk woord. Bijvoorbeeld:' }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Button' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Action Group' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Icon Start' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Tokens - Button' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Documentatie - Button' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Documentatie - Icon Size' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Demo - Accordion' }) }), '\n'] }), '\n', (0, l.jsx)(n.h4, { id: '322-layers', children: '3.2.2 Layers' }), '\n', (0, l.jsx)(n.p, { children: 'Layers schrijven we in kleine letters. Bijvoorbeeld:' }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'text' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'label + description' }) }), '\n'] }), '\n', (0, l.jsx)(n.h4, { id: '323-componenten', children: '3.2.3 Componenten' }), '\n', (0, l.jsx)(n.p, { children: "De componenten, zoals deze vanuit de bibliotheek worden gepubliceerd, schrijven we altijd in 'kebab-case', inclusief een prefix. Bijvoorbeeld:" }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'utrecht-button' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'denhaag-side-nav' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'nl-link' }) }), '\n'] }), '\n', (0, l.jsx)(n.h4, { id: '324-sub-componenten', children: '3.2.4 Sub-componenten' }), '\n', (0, l.jsxs)(n.p, { children: ['Soms zijn componenten opgesplitst in ', (0, l.jsx)(n.a, { href: '#3-3-sub-componenten', children: 'sub-componenten' }), ". Deze sub-componenten mogen een korte naam hebben, zodat de lagen beter leesbaar blijven. We schrijven deze altijd in 'kebab-case' en plaatsen 2 underscores voor de naam. Dit zorgt ervoor dat ze verborgen blijven bij het gebruik van de bibliotheek en sluit aan bij de BEM-conventie, die ook in code wordt gebruikt. Bijvoorbeeld:"] }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsxs)(n.li, { children: [(0, l.jsx)(n.code, { children: '.denhaag-contact-timeline__step-header' }), ' wordt ', (0, l.jsx)(n.code, { children: '__step-header' })] }), '\n', (0, l.jsxs)(n.li, { children: [(0, l.jsx)(n.code, { children: '.denhaag-contact-timeline__step' }), ' wordt ', (0, l.jsx)(n.code, { children: '__step' })] }), '\n', (0, l.jsxs)(n.li, { children: [(0, l.jsx)(n.code, { children: '.todo-modal-dialog-header' }), ' wordt ', (0, l.jsx)(n.code, { children: '__header' })] }), '\n'] }), '\n', (0, l.jsx)(n.h3, { id: '33-sub-componenten', children: '3.3 Sub-componenten' }), '\n', (0, l.jsx)(n.p, { children: 'Soms wordt een component opgesplitst in sub-componenten. Dit helpt om het ontwerp overzichtelijk, beheersbaar en herbruikbaar te houden. We maken subcomponenten aan als een component voldoet aan een of meerdere van de volgende criteria:' }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsx)(n.li, { children: 'De component is complex.' }), '\n', (0, l.jsx)(n.li, { children: 'De component is groot.' }), '\n', (0, l.jsx)(n.li, { children: 'De component bevat verschillende states.' }), '\n', (0, l.jsx)(n.li, { children: "De component bevat herhalende items, zoals 'Items' in een 'List'." }), '\n'] }), '\n', (0, l.jsx)(n.h3, { id: '34-properties', children: '3.4 Properties' }), '\n', (0, l.jsx)(n.h4, { id: '341-volgorde-van-properties', children: '3.4.1 Volgorde van properties' }), '\n', (0, l.jsx)(n.p, { children: 'De volgorde van properties kan per component verschillen. Over het algemeen geldt: de meest impactvolle of vaak gebruikte properties staan bovenaan. Zie deze lijst als een uitgangspunt, niet als een strikte regel.' }), '\n', (0, l.jsxs)(n.ol, { children: ['\n', (0, l.jsxs)(n.li, { children: [(0, l.jsx)(n.code, { children: 'Appearance' }), ' / ', (0, l.jsx)(n.code, { children: 'Type' })] }), '\n', (0, l.jsxs)(n.li, { children: [(0, l.jsx)(n.code, { children: 'Position' }), ' / ', (0, l.jsx)(n.code, { children: 'Level' }), ' / ', (0, l.jsx)(n.code, { children: 'Size' })] }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Checked' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Current' }) }), '\n', (0, l.jsxs)(n.li, { children: [(0, l.jsx)(n.code, { children: 'Collapsible' }), ' / ', (0, l.jsx)(n.code, { children: 'Toggle' })] }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Expanded' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Nested' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'State' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Container' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Text' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Show Icon Start' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: '\u21b3 Icon Start Value' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Show Icon End' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: '\u21b3 Icon End Value' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Show {naam-optie}' }) }), '\n'] }), '\n', (0, l.jsx)(n.h4, { id: '342-volgorde-van-property-values', children: '3.4.2 Volgorde van property values' }), '\n', (0, l.jsx)(n.p, { children: 'Over het algemeen geldt: de meest logische of vaakst gebruikte waarde staat bovenaan. Zie deze lijst als een uitgangspunt, niet als een strikte regel.' }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsxs)(n.li, { children: [(0, l.jsx)(n.code, { children: 'Checked' }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'False' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'True' }) }), '\n'] }), '\n'] }), '\n', (0, l.jsxs)(n.li, { children: [(0, l.jsx)(n.code, { children: 'Expanded' }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'False' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'True' }) }), '\n'] }), '\n'] }), '\n', (0, l.jsxs)(n.li, { children: [(0, l.jsx)(n.code, { children: 'States' }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Default' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Active' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Hover' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Focus-visible' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Invalid' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Read-only' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Disabled' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Visited' }) }), '\n'] }), '\n'] }), '\n'] }), '\n', (0, l.jsx)(n.h4, { id: '343-exposed-properties', children: '3.4.3 Exposed properties' }), '\n', (0, l.jsx)(n.p, { children: 'Wanneer je een nested instance gebruikt binnen een component (bijvoorbeeld een Paragraph in een Alert), vermijd dan exposed properties om de volgende redenen:' }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsx)(n.li, { children: 'Te veel opties in het component-panel kunnen verwarrend zijn.' }), '\n', (0, l.jsx)(n.li, { children: 'Exposed properties geven geen controle over de volgorde van properties in het component-panel.' }), '\n', (0, l.jsx)(n.li, { children: "Het risico bestaat dat een ongewenste variant wordt gekozen (bijvoorbeeld bij de Paragraph purpose 'Lead' in plaats van 'Default')." }), '\n', (0, l.jsx)(n.li, { children: 'Er kan altijd worden doorgeklikt naar de (sub)component om tekst of andere eigenschappen handmatig aan te passen.' }), '\n'] }), '\n', (0, l.jsx)(n.h3, { id: '35-icons', children: '3.5 Icons' }), '\n', (0, l.jsx)(n.p, { children: "Iconen worden indien mogelijk samengevoegd tot 1 vorm. Deze laag geven we de naar 'Shape'." }), '\n', (0, l.jsx)(n.h3, { id: '36-structuur-en-positionering', children: '3.6 Structuur en positionering' }), '\n', (0, l.jsx)(n.h4, { id: '361-volgorde-van-frames', children: '3.6.1 Volgorde van frames' }), '\n', (0, l.jsx)(n.p, { children: 'De volgorde van frames is als volgt:' }), '\n', (0, l.jsxs)(n.ol, { children: ['\n', (0, l.jsx)(n.li, { children: 'Tokens' }), '\n', (0, l.jsx)(n.li, { children: 'Sub-componenten (indien van toepassing)' }), '\n', (0, l.jsx)(n.li, { children: 'De component' }), '\n', (0, l.jsx)(n.li, { children: 'Documentatie' }), '\n', (0, l.jsx)(n.li, { children: 'Demo (indien van toepassing)' }), '\n'] }), '\n', (0, l.jsx)(n.p, { children: 'Bijvoorbeeld:' }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Tokens - Accordion' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: '__button' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: '__panel' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: '__section' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'utrecht-accordion' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Documentatie - Accordion' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'Demo - Accordion' }) }), '\n'] }), '\n', (0, l.jsx)(n.h4, { id: '362-positionering-en-witruimte', children: '3.6.2 Positionering en witruimte' }), '\n', (0, l.jsx)(n.p, { children: (0, l.jsx)(n.strong, { children: 'Buiten frames' }) }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsx)(n.li, { children: "De 'Page 'Heading' plaatsen we op X:0 en Y:0." }), '\n', (0, l.jsx)(n.li, { children: "De 'Estafettemodel Badge' plaatsen we 80px onder de Page Heading." }), '\n', (0, l.jsxs)(n.li, { children: ['Het eerste frame, vrijwel altijd ', (0, l.jsx)(n.code, { children: 'Tokens - {naam-component}' }), ', plaatsen we onder de Estafettemodel Badge.'] }), '\n', (0, l.jsx)(n.li, { children: 'Als een pagina geen Estafette badge heeft, plaatsen we het frame 160px onder de Page Heading.' }), '\n', (0, l.jsxs)(n.li, { children: ['Elke implementatie van een component bestaat uit de frames ', (0, l.jsx)(n.code, { children: 'Tokens - {naam-component}' }), ', de component zelf en ', (0, l.jsx)(n.code, { children: 'Documentatie - {naam-component}' }), '. Tussen deze frames zit horizontaal 80px.'] }), '\n'] }), '\n', (0, l.jsx)(n.p, { children: (0, l.jsx)(n.strong, { children: 'Binnen frames' }) }), '\n', (0, l.jsx)(n.p, { children: 'Er wordt gebruik gemaakt van auto-layout om de witruimte binnen frames te bepalen.' }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsx)(n.li, { children: 'Het frame van een (sub)component dat uit minstens 2 varianten bestaat, heeft een vertical gap van 48px en horizontal en vertical padding van 48px.' }), '\n', (0, l.jsxs)(n.li, { children: ['De frames ', (0, l.jsx)(n.code, { children: 'Tokens - {naam-component}' }), ' en ', (0, l.jsx)(n.code, { children: 'Documentatie - {naam-component}' }), ' hebben een vertical gap van 48px, horizontal padding van 48px en een vertical padding van 64px.'] }), '\n', (0, l.jsxs)(n.li, { children: ['Het frame ', (0, l.jsx)(n.code, { children: 'Demo - {naam-component}' }), ' heeft een vertical gap van 48px, horizontal padding van 16px en een vertical padding van 64px.'] }), '\n'] }), '\n', (0, l.jsx)(n.p, { children: '(Sub)component dat uit minstens 2 varianten bestaat:' }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsx)(n.li, { children: 'Verticale gap: 48px' }), '\n', (0, l.jsx)(n.li, { children: 'Horizontale padding: 48px' }), '\n', (0, l.jsx)(n.li, { children: 'Verticale padding: 48px' }), '\n'] }), '\n', (0, l.jsx)(n.p, { children: (0, l.jsx)(n.code, { children: 'Tokens - {naam-component}' }) }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsx)(n.li, { children: 'Verticale gap: 48px' }), '\n', (0, l.jsx)(n.li, { children: 'Horizontale padding: 48px' }), '\n', (0, l.jsx)(n.li, { children: 'Verticale padding: 64px' }), '\n'] }), '\n', (0, l.jsx)(n.p, { children: (0, l.jsx)(n.code, { children: 'Documentatie - {naam-component}' }) }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsx)(n.li, { children: 'Verticale gap: 48px' }), '\n', (0, l.jsx)(n.li, { children: 'Horizontale padding: 48px' }), '\n', (0, l.jsx)(n.li, { children: 'Verticale padding: 64px' }), '\n'] }), '\n', (0, l.jsx)(n.p, { children: (0, l.jsx)(n.code, { children: 'Demo - {naam-component}' }) }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsx)(n.li, { children: 'Verticale gap: 48px' }), '\n', (0, l.jsx)(n.li, { children: 'Horizontale padding: 16px' }), '\n', (0, l.jsx)(n.li, { children: 'Verticale padding: 64px' }), '\n'] }), '\n', (0, l.jsx)(n.h3, { id: '37-estafette-badges', children: '3.7 Estafette Badges' }), '\n', (0, l.jsx)(n.p, { children: 'De Estafette Badge bij een component geeft aan welke status de component heeft binnen het estafettemodel. Deze status komt overeen met de status zoals aangegeven op de documentatiewebsite.' }), '\n', (0, l.jsx)(n.p, { children: 'Belangrijke opmerking: Niet elke component in de Figma bibliotheek heeft op dit moment een Estafette Badge die volledig synchroon loopt met de documentatiewebsite. Dit betekent dat een component op de documentatiewebsite nog de status Help Wanted kan hebben, terwijl er in de Figma bibliotheek al een Community versie bestaat. In dat geval heeft de Community component nog niet alle vereiste checkpoints behaald. Dit verschil zal in de toekomst steeds minder voorkomen.' }), '\n', (0, l.jsx)(n.h4, { id: '371-speciale-statussen-help-wanted-en-experimental', children: '3.7.1 Speciale statussen: Help Wanted en Experimental' }), '\n', (0, l.jsx)(n.p, { children: (0, l.jsx)(n.strong, { children: 'Help Wanted' }) }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsx)(n.li, { children: 'Deze componenten hebben de Help Wanted status op de documentatiewebsite.' }), '\n', (0, l.jsx)(n.li, { children: "In de Figma bibliotheek bevatten ze een verwijzing naar de documentatiewebsite en vaak al tokens (met als prefix 'todo')." }), '\n', (0, l.jsx)(n.li, { children: 'Dit maakt verdere ontwikkeling richting de Community status eenvoudiger.' }), '\n'] }), '\n', (0, l.jsx)(n.p, { children: (0, l.jsx)(n.strong, { children: 'Experimental' }) }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsx)(n.li, { children: 'Deze componenten hebben nog geen enkele stap binnen het estafettemodel gezet.' }), '\n', (0, l.jsx)(n.li, { children: 'Ze hebben geen verwijzing naar de documentatiewebsite en bevatten geen tokens.' }), '\n', (0, l.jsx)(n.li, { children: 'Dit zijn vroege experimenten die nog geen offici\xeble status hebben.' }), '\n'] }), '\n', (0, l.jsx)(n.h2, { id: '4-templates', children: '4. Templates' }), '\n', (0, l.jsx)(n.p, { children: 'De volgende punten gelden specifiek voor een template bestand.' }), '\n', (0, l.jsx)(n.h3, { id: '41-schrijfwijze', children: '4.1 Schrijfwijze' }), '\n', (0, l.jsx)(n.h4, { id: '411-frames', children: '4.1.1 Frames' }), '\n', (0, l.jsxs)(n.p, { children: ['Voor frames hanteren we de volgende structuur voor de schrijfwijze: ', (0, l.jsx)(n.code, { children: 'Viewport_Naam-van-pagina_Aanvulling--state' }), '. ', (0, l.jsx)(n.code, { children: 'SV' }), " staat voor 'small viewport' en", (0, l.jsx)(n.code, { children: 'LV' }), " staat voor 'large viewport'."] }), '\n', (0, l.jsx)(n.p, { children: 'Bijvoorbeeld:' }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'SV_Detailpagina' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'LV_Detailpagina' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'SV_Titel-van-stap--invalid' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'SV_Titel-van-stap_Opslaan' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'SV_Titel-van-stap_Opslaan--invalid' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'SV_Inloggen_Ja' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'SV_Inloggen_Nee' }) }), '\n', (0, l.jsx)(n.li, { children: (0, l.jsx)(n.code, { children: 'SV_Uw-gegevens--logged-in' }) }), '\n'] }), '\n', (0, l.jsx)(n.h3, { id: '42-structuur-en-positionering', children: '4.2 Structuur en positionering' }), '\n', (0, l.jsx)(n.p, { children: 'Per patroon of template maken we een aparte Page aan. Denk hierbij aan:' }), '\n', (0, l.jsxs)(n.ul, { children: ['\n', (0, l.jsx)(n.li, { children: 'Homepage' }), '\n', (0, l.jsx)(n.li, { children: 'Detailpagina' }), '\n', (0, l.jsx)(n.li, { children: 'Zoeken' }), '\n', (0, l.jsx)(n.li, { children: 'Formulieren' }), '\n', (0, l.jsx)(n.li, { children: 'Mijn omgeving' }), '\n'] }), '\n', (0, l.jsx)(n.h3, { id: '421-positionering-en-witruimte', children: '4.2.1 Positionering en witruimte' }), '\n', (0, l.jsx)(n.p, { children: (0, l.jsx)(n.strong, { children: 'Buiten frames' }) }), '\n', (0, l.jsx)(n.p, { children: 'Tussen verschillende implementaties zit horizontaal 800px.' })] });
   }
   function h(e = {}) {
    const { wrapper: n } = { ...(0, t.a)(), ...e.components };
    return n ? (0, l.jsx)(n, { ...e, children: (0, l.jsx)(c, { ...e }) }) : c(e);
   }
  },
  40139: (e, n, i) => {
   i.d(n, { Z: () => o, a: () => d });
   var l = i(75271);
   const t = {},
    s = l.createContext(t);
   function d(e) {
    const n = l.useContext(s);
    return l.useMemo(
     function () {
      return 'function' == typeof e ? e(n) : { ...n, ...e };
     },
     [n, e],
    );
   }
   function o(e) {
    let n;
    return (n = e.disableParentContext ? ('function' == typeof e.components ? e.components(t) : e.components || t) : d(e.components)), l.createElement(s.Provider, { value: n }, e.children);
   }
  },
 },
]);
