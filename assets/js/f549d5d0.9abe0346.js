'use strict';
(self.webpackChunk_nl_design_system_website = self.webpackChunk_nl_design_system_website || []).push([
 [58688],
 {
  4661: (e, t, n) => {
   n.r(t), n.d(t, { assets: () => l, contentTitle: () => r, default: () => m, frontMatter: () => i, metadata: () => s, toc: () => d });
   var o = n(52676),
    a = n(40139);
   const i = { title: 'Voorbeeld-thema \xb7 Huisstijl vastleggen \xb7 Handboek', hide_title: !0, hide_table_of_contents: !0, sidebar_label: 'Voorbeeld-thema', sidebar_position: 2, pagination_label: 'Voorbeeld-thema', description: 'Informatie over het Voorbeeld-thema.', slug: '/handboek/huisstijl/themas/voorbeeld-thema', keywords: ['componenten', 'design system', 'design tokens', "thema's", 'voorbeeld-thema'] },
    r = 'Voorbeeld-thema',
    s = { id: 'handboek/huisstijl-vastleggen/themas/voorbeeld-thema', title: 'Voorbeeld-thema \xb7 Huisstijl vastleggen \xb7 Handboek', description: 'Informatie over het Voorbeeld-thema.', source: '@site/docs/handboek/huisstijl-vastleggen/themas/voorbeeld-thema.mdx', sourceDirName: 'handboek/huisstijl-vastleggen/themas', slug: '/handboek/huisstijl/themas/voorbeeld-thema', permalink: '/handboek/huisstijl/themas/voorbeeld-thema', draft: !1, unlisted: !1, editUrl: 'https://github.com/nl-design-system/documentatie/tree/main/docs/handboek/huisstijl-vastleggen/themas/voorbeeld-thema.mdx', tags: [], version: 'current', sidebarPosition: 2, frontMatter: { title: 'Voorbeeld-thema \xb7 Huisstijl vastleggen \xb7 Handboek', hide_title: !0, hide_table_of_contents: !0, sidebar_label: 'Voorbeeld-thema', sidebar_position: 2, pagination_label: 'Voorbeeld-thema', description: 'Informatie over het Voorbeeld-thema.', slug: '/handboek/huisstijl/themas/voorbeeld-thema', keywords: ['componenten', 'design system', 'design tokens', "thema's", 'voorbeeld-thema'] }, sidebar: 'handboek', previous: { title: 'Start-thema', permalink: '/handboek/huisstijl/themas/start-thema' }, next: { title: 'Componenten bijdragen', permalink: '/handboek/component-bijdragen/overzicht' } },
    l = {},
    d = [
     { value: 'Doel van het Voorbeeld-thema', id: 'doel-van-het-voorbeeld-thema', level: 2 },
     { value: 'Stijl van het Voorbeeld-thema', id: 'stijl-van-het-voorbeeld-thema', level: 2 },
     { value: 'Typografie', id: 'typografie', level: 3 },
     { value: 'Kleur', id: 'kleur', level: 3 },
     { value: 'Overige keuzes', id: 'overige-keuzes', level: 3 },
     { value: 'Help deze documentatie te verbeteren', id: 'help-deze-documentatie-te-verbeteren', level: 2 },
     { value: 'Vragen', id: 'vragen', level: 2 },
    ];
   function h(e) {
    const t = { a: 'a', code: 'code', h1: 'h1', h2: 'h2', h3: 'h3', hr: 'hr', img: 'img', p: 'p', ...(0, a.a)(), ...e.components };
    return (0, o.jsxs)(o.Fragment, { children: [(0, o.jsx)(t.h1, { id: 'voorbeeld-thema', children: 'Voorbeeld-thema' }), '\n', (0, o.jsx)(t.p, { children: "Op deze pagina lees je wat het doel en de stijl is van het 'Voorbeeld-thema'." }), '\n', (0, o.jsx)(t.h2, { id: 'doel-van-het-voorbeeld-thema', children: 'Doel van het Voorbeeld-thema' }), '\n', (0, o.jsxs)(t.p, { children: ['Met het Voorbeeld-thema laten we zien hoe je een eigen thema kunt doorvoeren op basis van het ', (0, o.jsx)(t.a, { href: '/handboek/huisstijl/themas/start-thema', children: 'Start-thema' }), ". Het dient als 'voorbeeld' en laat zien hoe je met een paar slimme aanpassingen je eigen huisstijl kunt toepassen."] }), '\n', (0, o.jsx)(t.p, { children: (0, o.jsx)(t.img, { src: 'https://raw.githubusercontent.com/nl-design-system/documentatie/assets/img_voorbeeld-thema_stijl.png', alt: 'Stijl van het Voorbeeld-thema uitgebeeld door middel van een violet vlak waarop met witte letters staat geschreven: Voorbeeld-thema. Uitgesproken en vriendelijk. Rechts staat in dezelfde violet kleur Nederland afgebeeld als illustratie.' }) }), '\n', (0, o.jsx)(t.h2, { id: 'stijl-van-het-voorbeeld-thema', children: 'Stijl van het Voorbeeld-thema' }), '\n', (0, o.jsx)(t.p, { children: 'De stijl van het Voorbeeld-thema is uitgesprokener dan die van het Start-thema.' }), '\n', (0, o.jsx)(t.h3, { id: 'typografie', children: 'Typografie' }), '\n', (0, o.jsx)(t.p, { children: 'In tegenstelling tot het Start-thema wordt er bij het Voorbeeld-thema gebruikgemaakt van twee verschillende lettertypes: Noto Serif en Noto Sans.' }), '\n', (0, o.jsx)(t.p, { children: (0, o.jsx)(t.img, { src: 'https://raw.githubusercontent.com/nl-design-system/documentatie/assets/img_voorbeeld-thema_typografie.png', alt: 'De teksten Noto Serif en Noto Sans worden afgebeeld met het overeenkomende lettertype.' }) }), '\n', (0, o.jsxs)(t.p, { children: ['Noto Serif wordt gebruikt voor koppen. Hiervoor krijgt ', (0, o.jsx)(t.code, { children: 'basis.heading.font-family' }), ' de waarde Noto Serif. Noto Sans wordt gebruikt voor alle andere teksten.'] }), '\n', (0, o.jsxs)(t.p, { children: ['De Noto-familie is open source en voldoet aan onze ', (0, o.jsx)(t.a, { href: '/richtlijnen/stijl/typografie/', children: 'richtlijnen voor typografie' }), '.'] }), '\n', (0, o.jsx)(t.p, { children: "Leuk detail: De naam Noto komt van 'No Tofu. 'Tofu' is de bijnaam voor het rechthoekje dat je ziet (\u25af) wanneer een letter of karakter niet kan worden weergegeven op een scherm of printer. Dat betekent dat dit lettertype (bijna) alle talen ter wereld kan tonen, dus geen 'tofu-blokjes' meer op het scherm!" }), '\n', (0, o.jsx)(t.h3, { id: 'kleur', children: 'Kleur' }), '\n', (0, o.jsx)(t.p, { children: 'In het Voorbeeld-thema voert de kleur violet de boventoon, gecombineerd met puur wit.' }), '\n', (0, o.jsx)(t.p, { children: (0, o.jsx)(t.img, { src: 'https://raw.githubusercontent.com/nl-design-system/documentatie/assets/img_voorbeeld-thema_kleur.png', alt: 'Twee cirkels. De linker is violet de rechter is wit met een grijze rand.' }) }), '\n', (0, o.jsx)(t.p, { children: 'Maar dit zijn niet de enige kleuren die vanuit de huisstijl beschikbaar zijn gesteld. Er is een ondersteunend palet met blauwgrijze tinten en diverse signaalkleuren. Deze huisstijlkleuren hebben allemaal een Nederlandse benaming: violet, grijs, blauw, groen, geel, oranje en rood.' }), '\n', (0, o.jsx)(t.p, { children: (0, o.jsx)(t.img, { src: 'https://raw.githubusercontent.com/nl-design-system/documentatie/assets/img_voorbeeld-thema_kleur-trap.png', alt: "Zeven verticale kleurenschema's voor de kleuren violet, grijs, blauw, groen, geel, oranje en rood. De kleurenschema's starten met de meest lichte tint bovenaan en worden naar beneden toe steeds donkerder." }) }), '\n', (0, o.jsx)(t.p, { children: "Al deze kleuren zijn als design tokens vastgelegd op het 'Brand' niveau. Vanuit de Common basis-tokens wordt daarnaar verwezen. Zo worden de kleuren consistent toegepast op alle componenten." }), '\n', (0, o.jsx)(t.p, { children: (0, o.jsx)(t.img, { src: 'https://raw.githubusercontent.com/nl-design-system/documentatie/assets/img_voorbeeld-thema_basis-tokens.png', alt: "De afbeelding toont een blauwe en violet primaire knop. Daarboven staan de verwijzingen vanuit de verschillende token niveau's." }) }), '\n', (0, o.jsxs)(t.p, { children: ['Violet leent zich uitstekend als kleur voor interactie. Daarom is ervoor gekozen knoppen violet te maken. Door de waarden van de basis-tokens ', (0, o.jsx)(t.code, { children: 'action-1' }), ' en ', (0, o.jsx)(t.code, { children: 'action-2' }), ' aan te passen, hebben de knoppen een afwijkende kleur ten opzichte van andere interactieve componenten.'] }), '\n', (0, o.jsx)(t.p, { children: (0, o.jsx)(t.img, { src: 'https://raw.githubusercontent.com/nl-design-system/documentatie/assets/img_voorbeeld-thema_basis-tokens_kleur-action-voorbeeld.png', alt: 'De afbeelding toont de componenten Button, Link, Breadcrumb Navigation en Page Number Navigation. De knoppen zijn violet. Alle andere interactieve componenten zijn blauw.' }) }), '\n', (0, o.jsxs)(t.p, { children: ['De stijl van het Voorbeeld-thema is uitgesproken. Dit zie je ook terug in de ', (0, o.jsx)(t.a, { href: '/page-footer', children: 'Page Footer' }), ', waar violet via de basis-token ', (0, o.jsx)(t.code, { children: 'basis.color.accent-1-inverse.bg-default' }), ' echt van de pagina knalt.'] }), '\n', (0, o.jsx)(t.p, { children: (0, o.jsx)(t.img, { src: 'https://raw.githubusercontent.com/nl-design-system/documentatie/assets/img_voorbeeld-thema_basis-tokens_kleur-accent-inverse.png', alt: 'De afbeelding toont de componenten Page Header en Page Footer. In beide componenten komt de violet kleur terug. Bij de Page Footer wordt de violetkleur als achtergrond gebruikt waardoor deze visueel zeer aanwezig is.' }) }), '\n', (0, o.jsx)(t.h3, { id: 'overige-keuzes', children: 'Overige keuzes' }), '\n', (0, o.jsx)(t.p, { children: 'Voor nu zijn dit de belangrijkste verschillen met het Start-thema. De iconensets en waarden van basis-tokens voor ruimte, afmetingen, afgeronde hoeken, lijndikte en schaduw zijn verder ongewijzigd. Pas ze gerust aan als dat voor jouw organisatie nodig is.' }), '\n', (0, o.jsx)(t.hr, {}), '\n', (0, o.jsx)(t.h2, { id: 'help-deze-documentatie-te-verbeteren', children: 'Help deze documentatie te verbeteren' }), '\n', (0, o.jsxs)(t.p, { children: ['Om ervoor te zorgen dat deze documentatie nuttig, relevant en up-to-date is, kun je een wijziging voorstellen via ', (0, o.jsx)(t.a, { href: 'https://github.com/nl-design-system/documentatie', children: 'GitHub' }), '.'] }), '\n', (0, o.jsx)(t.h2, { id: 'vragen', children: 'Vragen' }), '\n', (0, o.jsxs)(t.p, { children: ['Heb je een vraag? Twijfel niet en ', (0, o.jsx)(t.a, { href: '/project/kernteam', children: 'neem contact op met het kernteam' }), '.'] })] });
   }
   function m(e = {}) {
    const { wrapper: t } = { ...(0, a.a)(), ...e.components };
    return t ? (0, o.jsx)(t, { ...e, children: (0, o.jsx)(h, { ...e }) }) : h(e);
   }
  },
  40139: (e, t, n) => {
   n.d(t, { Z: () => s, a: () => r });
   var o = n(75271);
   const a = {},
    i = o.createContext(a);
   function r(e) {
    const t = o.useContext(i);
    return o.useMemo(
     function () {
      return 'function' == typeof e ? e(t) : { ...t, ...e };
     },
     [t, e],
    );
   }
   function s(e) {
    let t;
    return (t = e.disableParentContext ? ('function' == typeof e.components ? e.components(a) : e.components || a) : r(e.components)), o.createElement(i.Provider, { value: t }, e.children);
   }
  },
 },
]);
